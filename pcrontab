#!/bin/bash

# pcrontab [-u user] {-l | -r | -e} 
# -l display the pcrontab of the specified user
# -r remove the pcrontab of the specified user
# -e edit the pcrontab of the specified user

# If there's no argument passed to the script display the usage
if [ $# -eq 0 ]; then
    echo "Usage: pcrontab [-u user] {-l | -r | -e}"
    echo "-l display the pcrontab of the specified user"
    echo "-r remove the pcrontab of the specified user"
    echo "-e edit the pcrontab of the specified user"
    exit 0
fi

# Parse the command line arguments
if [ "$1" = "-u" ]; then
    user=$2
    option=$3
else
    user=$(whoami)
    option=$1
fi

/var/lib/pcron/modules/permission.sh $user
status=$?
# Check if the pcron permissions are set
if [ $status -eq 1 ]; then
    echo "The user does not have the required permissions."
    exit 1
elif [ $status -eq 2 ]; then
    echo "The user permissions are not set. Contact your administrator."
    exit 1
fi
if [ $status -ne 0 ]; then
    echo "error status not handled: $status"
    exit 1
fi

# Check if the user exists
if ! id -u $user &>/dev/null; then
    echo "The specified user does not exist."
    exit 2
fi

# The crontab file
file=/etc/pcron/pcrontab$user

# Display the pcrontab
# Check if the pcron file exists
if [ "$option" = "-l" ]; then
    if [ ! -e $file ]; then
        echo "The pcrontab file does not exist."
        exit 0
    else
        cat $file
        exit 0
    fi
fi

# Remove the pcrontab
if [ "$option" = "-r" ]; then
    if [ ! -e $file ]; then
        echo "The pcrontab file does not exist."
        exit 3
    fi
    # Confirmation before removing the file
    echo "Are you sure you want to remove the pcrontab file? (y/n)"
    read answer
    if [ "$answer" != "y" ]; then
        echo "The pcrontab file was not removed."
        exit 4
    fi
    rm $file
    exit 0
fi

# Edit the pcrontab
if [ "$option" = "-e" ]; then
    vi /etc/pcron/pcrontab$user
    chmod 600 /etc/pcron/pcrontab$user
    exit 0
fi

